# Generated by Django 4.1.3 on 2023-03-19 19:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_superuser', models.BooleanField(default=False)),
                ('role', models.CharField(choices=[('STUDENT_UNION', 'Student Union'), ('SOCIETY', 'Society'), ('STUDENT', 'Student')], default='STUDENT', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=5000, null=True)),
                ('photo', models.ImageField(default='/Users/michellew/SEG-Major-Group/static/images/default_event_photo.jpg', upload_to='events/')),
                ('location', models.CharField(max_length=255)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('early_booking_capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('standard_booking_capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('early_bird_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('standard_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=50)),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Stripe customer ID')),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('line_1', models.CharField(max_length=255)),
                ('line_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city_town', models.CharField(max_length=255)),
                ('postcode', models.CharField(max_length=10)),
                ('country', models.CharField(default='United Kingdom', max_length=255)),
            ],
            options={
                'ordering': ['-create_at'],
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('abbreviation', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='StudentUnion',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
            bases=('tsp.user',),
            managers=[
                ('student_union', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('EARLY_BIRD', 'early_bird'), ('STANDARD', 'standard')], default='EARLY_BIRD', max_length=20)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tsp.event')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='tsp.order')),
            ],
        ),
        migrations.CreateModel(
            name='EventCartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('early_bird_quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('standard_quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tsp.event')),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='tsp.university')),
            ],
        ),
        migrations.CreateModel(
            name='BaseCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_cart_item', models.ManyToManyField(blank=True, to='tsp.eventcartitem')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='university',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tsp.university'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('discounted_event', models.ManyToManyField(blank=True, related_name='discounted_event', to='tsp.event')),
                ('purchased_event', models.ManyToManyField(blank=True, related_name='purchased_event', to='tsp.event')),
                ('saved_event', models.ManyToManyField(blank=True, related_name='saved_event', to='tsp.event')),
            ],
            options={
                'abstract': False,
            },
            bases=('tsp.user',),
            managers=[
                ('student', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Society',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('member_discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('member_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('account_number', models.CharField(blank=True, max_length=8, null=True, validators=[django.core.validators.MinLengthValidator(8), django.core.validators.RegexValidator(code='invalid_account_number', message='Account number must be 8 digits.', regex='^\\d{0,8}$')])),
                ('sort_code', models.CharField(blank=True, max_length=6, null=True, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.RegexValidator(code='invalid_sort_code', message='Sort code must be 6 digits.', regex='^\\d{0,6}$')])),
                ('account_name', models.CharField(blank=True, max_length=50, null=True)),
                ('stripe_account_id', models.CharField(blank=True, max_length=50, null=True)),
                ('committee_member', models.ManyToManyField(blank=True, related_name='committee_members', to='tsp.student')),
                ('follower', models.ManyToManyField(blank=True, related_name='follower', to='tsp.student')),
                ('regular_member', models.ManyToManyField(blank=True, related_name='regular_member', to='tsp.student')),
                ('student_union', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tsp.studentunion')),
                ('subscriber', models.ManyToManyField(blank=True, related_name='subscriber', to='tsp.student')),
            ],
            options={
                'abstract': False,
            },
            bases=('tsp.user',),
            managers=[
                ('society', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('status', models.CharField(choices=[('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='COMPLETED', max_length=50)),
                ('last4', models.CharField(blank=True, max_length=4, verbose_name='Last 4 digits of bank card')),
                ('brand', models.CharField(blank=True, max_length=50)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tsp.order')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tsp.student')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tsp.student'),
        ),
        migrations.CreateModel(
            name='HistoricalCart',
            fields=[
                ('basecart_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tsp.basecart')),
                ('total_price', models.DecimalField(decimal_places=8, default=0.0, max_digits=10)),
                ('total_saved', models.DecimalField(decimal_places=8, default=0.0, max_digits=10)),
                ('count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('discount_data', models.JSONField(blank=True, default=dict)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tsp.order')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tsp.student')),
            ],
            bases=('tsp.basecart',),
        ),
        migrations.AddField(
            model_name='event',
            name='host',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='host', to='tsp.society'),
        ),
        migrations.AddField(
            model_name='event',
            name='society',
            field=models.ManyToManyField(related_name='society', to='tsp.society'),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('basecart_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tsp.basecart')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tsp.student')),
            ],
            bases=('tsp.basecart',),
        ),
        migrations.AddField(
            model_name='basecart',
            name='membership',
            field=models.ManyToManyField(blank=True, to='tsp.society'),
        ),
    ]
